/** 
 * SARL-MASSIM - Interface between the SARL agent-oriented language 
 * and the MASSIM 2017 server
 * Copyright (C) 2017 The SARL-MASSIM Authors.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package au.edu.rmit.agtgrp.agtcity.sarl.mw.entities

import java.util.Map
import eis.iilang.Percept
import au.edu.rmit.agtgrp.agtcity.sarl.mw.aggregator.Util
import java.util.HashMap
import eis.iilang.ParameterList

/** 
 * @author bob
 * 
 */
class Role {
	// From 2017 server configuration conf/roles/roles.json
	//"drone" : {
	//    "speed" : 5,
	//    "load" : 100,
	//    "battery" : 250,
	//    "roads" : ["air"]
	//  },
	//	
	var name : String
	var speed : double
	var load : double
	var battery : double
	var toolCapacities : Map<String, Tool>
	
	new(percept : Percept){

		this.name = Util.extractString(percept.parameters.get(0))
		this.speed = Util.extractDouble(percept.parameters.get(1))
		this.load = Util.extractDouble(percept.parameters.get(2))
		this.battery = Util.extractDouble(percept.parameters.get(3))
		
		// TODO: this is strange as the index 4 is mean to be the roads, not the tools
		// However, it is true that the spec says "Each tool is only usable by a subset of all agent roles."
		// but not sure how is that stated, which roles can handle which tools.
		// This object does not store that info		
		this.toolCapacities = new HashMap;
		var tools = percept.parameters.get(4) as ParameterList
		for (t : tools){
			var toolName = Util.extractString(t)
			var tool = new Tool(toolName)
			toolCapacities.put(tool.name, tool)
		}
	}
	def getName() : String {
		return this.name
	}
	
}
